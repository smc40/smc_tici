name: Test, Build and Deploy TICI

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  PYTHON_VERSION: 3.9
  REGISTRY: ghcr.io
  IMAGE_NAME: ticiapp
  RESOURCE_GROUP: rg-smc-ticiapp-dev 
  CONTAINER_APP_ENVIRONMENT: acae-smc-ticiapp-dev
  CONTAINER_APP: aca-smc-ticiapp-dev


permissions:
  id-token: write
  contents: read
  packages: write


jobs:
  test-python:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{env.PYTHON_VERSION}}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r req_freeze.txt
          pip install ruff

      - name: Lint
        run: ruff check --output-format=github .


  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}:latest

      - name: Build and push image to ghcr
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: ./Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.ouputs.labels }}

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          registryUsername: ${{ github.actor }}
          registryPassword: ${{ secrets.GITHUB_TOKEN }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          containerAppEnvironment: ${{ env.CONTAINER_APP_ENVIRONMENT }}
          containerAppName: ${{ env.CONTAINER_APP }}
          imageToDeploy: ${{ env.REGISTRY }}/${{ github.repository }}:latest
            # appSourcePath: ${{ github.workspace }}


